/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mainPack;

import com.formdev.flatlaf.FlatDarculaLaf;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.json.JSONObject;


/**
 *
 * @author Tuf
 */

public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }
    public void actionperform(){
        String baseCurrency = (String) base.getSelectedItem();
        String toCurrency = (String) to.getSelectedItem();
        
       String partialBase = baseCurrency.substring(0, 3);
       String partialTo = toCurrency.substring(0, 3);
       try {
            String urlString = "https://v6.exchangerate-api.com/v6/" + "" + "/latest/" + partialBase + "?symbols=" + partialTo;
            URL url = new URL(urlString);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            
            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder answer = new StringBuilder();
            String line;
            
            while((line =reader.readLine()) != null){
                answer.append(line);
            }
            reader.close();
            //String jsonResponse = answer.toString();
            JSONObject jsonResponse = new JSONObject(answer.toString());
           
            double conversionRate = jsonResponse.getJSONObject("conversion_rates").getDouble(partialTo);
            double amountToConvert = Double.parseDouble(jTextField1.getText());
            double convertedAmount = amountToConvert * conversionRate;
            jTextField2.setText(String.valueOf(convertedAmount));
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        base = new javax.swing.JComboBox<>();
        to = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Currency Converter");
        setForeground(java.awt.Color.darkGray);
        setName("Currency"); // NOI18N
        setResizable(false);

        base.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AED (UAE)", "AFN (Afghanistan)", "ALL (Albania)", "AMD (Armenia)", "ANG (Netherlands Antilles)", "AOA (Angola)", "ARS (Argentina)", "AUD (Australia)", "AWG (Aruba)", "AZN (Azerbaijan)", "BAM (Bosnia and Herzegovina)", "BBD (Barbados)", "BDT (Bangladesh)", "BGN (Bulgaria)", "BHD (Bahrain)", "BIF (Burundi)", "BMD (Bermuda)", "BND (Brunei)", "BOB (Bolivia)", "BRL (Brazil)", "BSD (Bahamas)", "BTN (Bhutan)", "BWP (Botswana)", "BYN (Belarus)", "BZD (Belize)", "CAD (Canada)", "CDF (Democratic Republic of the Congo)", "CHF (Switzerland)", "CLP (Chile)", "CNY (China)", "COP (Colombia)", "CRC (Costa Rica)", "CUP (Cuba)", "CVE (Cape Verde)", "CZK (Czech Republic)", "DJF (Djibouti)", "DKK (Denmark)", "DOP (Dominican Republic)", "DZD (Algeria)", "EGP (Egypt)", "ERN (Eritrea)", "ETB (Ethiopia)", "EUR (European Union)", "FJD (Fiji)", "FKP (Falkland Islands)", "FOK (Faroe Islands)", "GBP (United Kingdom)", "GEL (Georgia)", "GGP (Guernsey)", "GHS (Ghana)", "GIP (Gibraltar)", "GMD (Gambia)", "GNF (Guinea)", "GTQ (Guatemala)", "GYD (Guyana)", "HKD (Hong Kong)", "HNL (Honduras)", "HRK (Croatia)", "HTG (Haiti)", "HUF (Hungary)", "IDR (Indonesia)", "ILS (Israel)", "IMP (Isle of Man)", "INR (India)", "IQD (Iraq)", "IRR (Iran)", "ISK (Iceland)", "JEP (Jersey)", "JMD (Jamaica)", "JOD (Jordan)", "JPY (Japan)", "KES (Kenya)", "KGS (Kyrgyzstan)", "KHR (Cambodia)", "KID (Kiribati)", "KMF (Comoros)", "KRW (South Korea)", "KWD (Kuwait)", "KYD (Cayman Islands)", "KZT (Kazakhstan)", "LAK (Laos)", "LBP (Lebanon)", "LKR (Sri Lanka)", "LRD (Liberia)", "LSL (Lesotho)", "LYD (Libya)", "MAD (Morocco)", "MDL (Moldova)", "MGA (Madagascar)", "MKD (North Macedonia)", "MMK (Myanmar)", "MNT (Mongolia)", "MOP (Macau)", "MRU (Mauritania)", "MUR (Mauritius)", "MVR (Maldives)", "MWK (Malawi)", "MXN (Mexico)", "MYR (Malaysia)", "MZN (Mozambique)", "NAD (Namibia)", "NGN (Nigeria)", "NIO (Nicaragua)", "NOK (Norway)", "NPR (Nepal)", "NZD (New Zealand)", "OMR (Oman)", "PAB (Panama)", "PEN (Peru)", "PGK (Papua New Guinea)", "PHP (Philippines)", "PKR (Pakistan)", "PLN (Poland)", "PYG (Paraguay)", "QAR (Qatar)", "RON (Romania)", "RSD (Serbia)", "RUB (Russia)", "RWF (Rwanda)", "SAR (Saudi Arabia)", "SBD (Solomon Islands)", "SCR (Seychelles)", "SDG (Sudan)", "SEK (Sweden)", "SGD (Singapore)", "SHP (Saint Helena)", "SLE (Sierra Leone)", "SLL (Sierra Leone)", "SOS (Somalia)", "SRD (Suriname)", "SSP (South Sudan)", "STN (São Tomé and Príncipe)", "SYP (Syria)", "SZL (Eswatini)", "THB (Thailand)", "TJS (Tajikistan)", "TMT (Turkmenistan)", "TND (Tunisia)", "TOP (Tonga)", "TRY (Turkey)", "TTD (Trinidad and Tobago)", "TVD (Tuvalu)", "TWD (Taiwan)", "TZS (Tanzania)", "UAH (Ukraine)", "UGX (Uganda)", "USD (United States)", "UYU (Uruguay)", "UZS (Uzbekistan)", "VES (Venezuela)", "VND (Vietnam)", "VUV (Vanuatu)", "WST (Samoa)", "XAF (Central Africa)", "XCD (East Caribbean)", "XDR (International Monetary Fund)", "XOF (West Africa)", "XPF (Pacific Franc)", "YER (Yemen)", "ZAR (South Africa)", "ZMW (Zambia)", "ZWL (Zimbabwe)" }));
        base.setSelectedIndex(146);
        base.setToolTipText("");
        base.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        base.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseActionPerformed(evt);
            }
        });

        to.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AED (UAE)", "AFN (Afghanistan)", "ALL (Albania)", "AMD (Armenia)", "ANG (Netherlands Antilles)", "AOA (Angola)", "ARS (Argentina)", "AUD (Australia)", "AWG (Aruba)", "AZN (Azerbaijan)", "BAM (Bosnia and Herzegovina)", "BBD (Barbados)", "BDT (Bangladesh)", "BGN (Bulgaria)", "BHD (Bahrain)", "BIF (Burundi)", "BMD (Bermuda)", "BND (Brunei)", "BOB (Bolivia)", "BRL (Brazil)", "BSD (Bahamas)", "BTN (Bhutan)", "BWP (Botswana)", "BYN (Belarus)", "BZD (Belize)", "CAD (Canada)", "CDF (Democratic Republic of the Congo)", "CHF (Switzerland)", "CLP (Chile)", "CNY (China)", "COP (Colombia)", "CRC (Costa Rica)", "CUP (Cuba)", "CVE (Cape Verde)", "CZK (Czech Republic)", "DJF (Djibouti)", "DKK (Denmark)", "DOP (Dominican Republic)", "DZD (Algeria)", "EGP (Egypt)", "ERN (Eritrea)", "ETB (Ethiopia)", "EUR (European Union)", "FJD (Fiji)", "FKP (Falkland Islands)", "FOK (Faroe Islands)", "GBP (United Kingdom)", "GEL (Georgia)", "GGP (Guernsey)", "GHS (Ghana)", "GIP (Gibraltar)", "GMD (Gambia)", "GNF (Guinea)", "GTQ (Guatemala)", "GYD (Guyana)", "HKD (Hong Kong)", "HNL (Honduras)", "HRK (Croatia)", "HTG (Haiti)", "HUF (Hungary)", "IDR (Indonesia)", "ILS (Israel)", "IMP (Isle of Man)", "INR (India)", "IQD (Iraq)", "IRR (Iran)", "ISK (Iceland)", "JEP (Jersey)", "JMD (Jamaica)", "JOD (Jordan)", "JPY (Japan)", "KES (Kenya)", "KGS (Kyrgyzstan)", "KHR (Cambodia)", "KID (Kiribati)", "KMF (Comoros)", "KRW (South Korea)", "KWD (Kuwait)", "KYD (Cayman Islands)", "KZT (Kazakhstan)", "LAK (Laos)", "LBP (Lebanon)", "LKR (Sri Lanka)", "LRD (Liberia)", "LSL (Lesotho)", "LYD (Libya)", "MAD (Morocco)", "MDL (Moldova)", "MGA (Madagascar)", "MKD (North Macedonia)", "MMK (Myanmar)", "MNT (Mongolia)", "MOP (Macau)", "MRU (Mauritania)", "MUR (Mauritius)", "MVR (Maldives)", "MWK (Malawi)", "MXN (Mexico)", "MYR (Malaysia)", "MZN (Mozambique)", "NAD (Namibia)", "NGN (Nigeria)", "NIO (Nicaragua)", "NOK (Norway)", "NPR (Nepal)", "NZD (New Zealand)", "OMR (Oman)", "PAB (Panama)", "PEN (Peru)", "PGK (Papua New Guinea)", "PHP (Philippines)", "PKR (Pakistan)", "PLN (Poland)", "PYG (Paraguay)", "QAR (Qatar)", "RON (Romania)", "RSD (Serbia)", "RUB (Russia)", "RWF (Rwanda)", "SAR (Saudi Arabia)", "SBD (Solomon Islands)", "SCR (Seychelles)", "SDG (Sudan)", "SEK (Sweden)", "SGD (Singapore)", "SHP (Saint Helena)", "SLE (Sierra Leone)", "SLL (Sierra Leone)", "SOS (Somalia)", "SRD (Suriname)", "SSP (South Sudan)", "STN (São Tomé and Príncipe)", "SYP (Syria)", "SZL (Eswatini)", "THB (Thailand)", "TJS (Tajikistan)", "TMT (Turkmenistan)", "TND (Tunisia)", "TOP (Tonga)", "TRY (Turkey)", "TTD (Trinidad and Tobago)", "TVD (Tuvalu)", "TWD (Taiwan)", "TZS (Tanzania)", "UAH (Ukraine)", "UGX (Uganda)", "USD (United States)", "UYU (Uruguay)", "UZS (Uzbekistan)", "VES (Venezuela)", "VND (Vietnam)", "VUV (Vanuatu)", "WST (Samoa)", "XAF (Central Africa)", "XCD (East Caribbean)", "XDR (International Monetary Fund)", "XOF (West Africa)", "XPF (Pacific Franc)", "YER (Yemen)", "ZAR (South Africa)", "ZMW (Zambia)", "ZWL (Zimbabwe)" }));
        to.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField1.setText("1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Base");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("To");

        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(187, 220, 255));
        jLabel3.setText("Currency Converter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                                .addComponent(base, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(base, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void baseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_baseActionPerformed

    private void toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    try {
        // Ensure user has input something in jTextField1
        String amountText = jTextField1.getText();
        if (amountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter an amount to convert", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Try parsing the amount entered
        double amount = Double.parseDouble(amountText);
        
        // Call actionperform method to perform conversion
        actionperform();
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid number format. Please enter a valid number.", "Input Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            UIManager.setLookAndFeel(new FlatDarculaLaf());
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new main().setVisible(true);
                }
            });
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> base;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox<String> to;
    // End of variables declaration//GEN-END:variables
}
